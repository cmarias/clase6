
Estudiante@CorpoSala22-PC MINGW64 ~
$ git config --list
core.symlinks=false
core.autocrlf=true
core.fscache=true
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=true
help.format=html
rebase.autosquash=true
http.sslcainfo=C:/Users/Estudiante/AppData/Local/Programs/Git/mingw64/ssl/certs/     ca-bundle.crt
http.sslbackend=openssl
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
credential.helper=manager

Estudiante@CorpoSala22-PC MINGW64 ~
$ git config --global user.name "Miyagi"

Estudiante@CorpoSala22-PC MINGW64 ~
$ git config --global user.email carlos.arias.perez@gmail.com

Estudiante@CorpoSala22-PC MINGW64 ~
$ git config --list
core.symlinks=false
core.autocrlf=true
core.fscache=true
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=true
help.format=html
rebase.autosquash=true
http.sslcainfo=C:/Users/Estudiante/AppData/Local/Programs/Git/mingw64/ssl/certs/     ca-bundle.crt
http.sslbackend=openssl
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
credential.helper=manager
user.name=Miyagi
user.email=carlos.arias.perez@gmail.com

Estudiante@CorpoSala22-PC MINGW64 ~
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Estudiante@CorpoSala22-PC MINGW64 ~
$ dir
AppData
Configuración\ local
Contacts
Cookies
Datos\ de\ programa
Desktop
Downloads
Entorno\ de\ red
Favorites
Impresoras
Links
Menú\ Inicio
Mis\ documentos
Music
ntuser.dat
ntuser.dat.LOG1
ntuser.dat.LOG2
NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf
NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001     .regtrans-ms
NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002     .regtrans-ms
ntuser.ini
Pictures
Plantillas
Reciente
Saved\ Games
Searches
SendTo
Videos

Estudiante@CorpoSala22-PC MINGW64 ~
$ dir
AppData
Configuración\ local
Contacts
Cookies
Datos\ de\ programa
Desktop
Downloads
Entorno\ de\ red
Favorites
Impresoras
Links
Menú\ Inicio
Mis\ documentos
Music
ntuser.dat
ntuser.dat.LOG1
ntuser.dat.LOG2
NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TM.blf
NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000001     .regtrans-ms
NTUSER.DAT{016888bd-6c6f-11de-8d1d-001e0bcde3ec}.TMContainer00000000000000000002     .regtrans-ms
ntuser.ini
Pictures
Plantillas
Proyecto
Reciente
Saved\ Games
Searches
SendTo
Videos

Estudiante@CorpoSala22-PC MINGW64 ~
$ cd proyecto

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto
$ git init
Initialized empty Git repository in C:/Users/Estudiante/Proyecto/.git/

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto (master)
$ git clone https://github.com/cmarias/clase6.git
Cloning into 'clase6'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto (master)
$ cd

Estudiante@CorpoSala22-PC MINGW64 ~
$ cd

Estudiante@CorpoSala22-PC MINGW64 ~
$ cd proyecto

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto (master)
$ dir
clase6

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto (master)
$ cd clase6

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ dir}
README.md

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ dir
README.md

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ add.
bash: add.: command not found

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ add
bash: add: command not found

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add
Nothing specified, nothing added.
Maybe you wanted to say 'git add .'?

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add .

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git commit -m 'primero'
[master 45b30f3] primero
 2 files changed, 60 insertions(+)
 create mode 100644 JuanValdez/index.html
 create mode 100644 JuanValdez/index1.html

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git log
commit 45b30f3fe8871e6186e0e723871f5cb5c746ab86 (HEAD -> master)
Author: Miyagi <carlos.arias.perez@gmail.com>
Date:   Wed Aug 22 19:33:22 2018 -0500

    primero

commit 9c09dea35526aba3a2721226a7fa1f1dc6ff355c (origin/master, origin/HEAD)
Author: cmarias <carlos.arias.perez@gmail.com>
Date:   Wed Aug 22 19:16:07 2018 -0500

    Create README.md

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git push
      2 [sig] sh 2800! sigpacket::process: Suppressing signal 18 to win32 process    (pid 3704)
      2 [sig] bash 2776! sigpacket::process: Suppressing signal 18 to win32 proces   s (pid 2032)
Logon failed, use ctrl+c to cancel basic credential prompt.
Username for 'https://github.com': 17201773 [sig] bash 2776! sigpacket::process: S   uppressing signal 18 to win32 process (pid 2032)

error: unable to read askpass response from 'C:/Users/Estudiante/AppData/Local/Pro   grams/Git/mingw64/libexec/git-core/git-gui--askpass'
Password for 'https://github.com':
Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git push?
git: 'push?' is not a git command. See 'git --help'.

The most similar command is
        push

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git help push

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git push
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Delta compression using up to 2 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 736 bytes | 184.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0)
To https://github.com/cmarias/clase6.git
   9c09dea..45b30f3  master -> master

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git pull
Already up to date.

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   JuanValdez/index.html

no changes added to commit (use "git add" and/or "git commit -a")

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add .

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git commit 'segundo'
error: pathspec 'segundo' did not match any file(s) known to git.

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git commit -m 'segundo'
[master 86539ad] segundo
 1 file changed, 1 insertion(+), 1 deletion(-)

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 411 bytes | 205.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/cmarias/clase6.git
   45b30f3..86539ad  master -> master

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   JuanValdez/index.html

no changes added to commit (use "git add" and/or "git commit -a")

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add index.html
fatal: pathspec 'index.html' did not match any files

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add juanvaldez/index.html

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git commit -m 'tercero'
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
        modified:   JuanValdez/index.html

no changes added to commit

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git commit -m 'tercero'
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
        modified:   JuanValdez/index.html

no changes added to commit

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   JuanValdez/index.html

no changes added to commit (use "git add" and/or "git commit -a")

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git add JuanValdez/index.html

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git commit -m 'tercero'
[master 61304a8] tercero
 1 file changed, 1 insertion(+), 1 deletion(-)

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git push
fatal: unable to access 'https://github.com/cmarias/clase6.git/': Could not resolv   e host: github.com

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 403 bytes | 201.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/cmarias/clase6.git
   86539ad..61304a8  master -> master

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git remote
origin

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git remote -v
origin  https://github.com/cmarias/clase6.git (fetch)
origin  https://github.com/cmarias/clase6.git (push)

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git branch pruebas

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git branch
* master
  pruebas

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git checkout pruebas
Switched to branch 'pruebas'

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (master)
$ git checkout pruebas
Switched to branch 'pruebas'

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git push
fatal: The current branch pruebas has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin pruebas


Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git push --set-upstream origin pruebas
Total 0 (delta 0), reused 0 (delta 0)
To https://github.com/cmarias/clase6.git
 * [new branch]      pruebas -> pruebas
Branch 'pruebas' set up to track remote branch 'pruebas' from 'origin'.

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git status
On branch pruebas
Your branch is up to date with 'origin/pruebas'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        JuanValdez/index2.html

nothing added to commit but untracked files present (use "git add" to track)

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git add JuanValdez/index2.html

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git status
On branch pruebas
Your branch is up to date with 'origin/pruebas'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   JuanValdez/index2.html


Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git commit -m
error: switch `m' requires a value

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git commit -m 'cuarto'
[pruebas 8575b9b] cuarto
 1 file changed, 10 insertions(+)
 create mode 100644 JuanValdez/index2.html

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 2 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 353 bytes | 176.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/cmarias/clase6.git
   61304a8..8575b9b  pruebas -> pruebas

Estudiante@CorpoSala22-PC MINGW64 ~/proyecto/clase6 (pruebas)
$
